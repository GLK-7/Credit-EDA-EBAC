{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[],"dockerImageVersionId":30786,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"# **Exploração e análise de dados de crédito com SQL**\n\n---\n\nAutor: **Gabriel Lino**\n\n<div style=\"display: flex; gap: 10px;\"> \n  <a href=\"mailto:gabriel.godoitb@gmail.com\"><img src=\"https://img.shields.io/badge/-Gmail-%23333?style=for-the-badge&logo=gmail&logoColor=white\" target=\"_blank\"></a>\n  <a href=\"https://www.linkedin.com/in/glgodoi\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-LinkedIn-%230077B5?style=for-the-badge&logo=linkedin&logoColor=white\" target=\"_blank\"></a>  \n  <a href=\"https://github.com/GLK-7\" target=\"_blank\"><img src=\"https://img.shields.io/badge/github-%23121011.svg?style=for-the-badge&logo=github&logoColor=white\" target=\"_blank\"></a>  \n</div>\n\n---","metadata":{}},{"cell_type":"markdown","source":"# **Tópicos**\n\n<ol type=\"1\">\n    <li>Exploração;</li>\n    <li>Análise de Dados;</li>\n    <li>Conclusões;</li>\n</ol>","metadata":{}},{"cell_type":"markdown","source":"# Descrição\n\n*Esse notebook faz parte do curso SQL para análise de dados da EBAC.*\n\nNeste projeto, realizo uma exploração e análise detalhada de um conjunto de dados de crédito utilizando o poder do Amazon Athena e do Amazon S3 para consultas SQL. Combinando a infraestrutura escalável da AWS com o ambiente interativo do Kaggle, executo consultas eficientes para extrair insights relevantes sobre os dados. Além disso, utilizo a biblioteca pandas para carregar e visualizar os resultados das consultas, facilitando a análise e interpretação dos dados.\n\nEste projeto busca demonstrar como ferramentas baseadas em cloud computing podem ser integradas para criar pipelines de análise de dados robustos e ágeis, possibilitando uma exploração aprofundada dos dados e auxiliando na geração de insights para tomadas de decisões informadas.","metadata":{}},{"cell_type":"markdown","source":"## Os dados: \n\nOs dados representam informações de clientes de um banco e contam com as seguintes colunas: \n\n* idade = idade do cliente\n* sexo = sexo do cliente (F ou M)\n* dependentes = número de dependentes do cliente\n* escolaridade = nível de escolaridade do clientes\n* salario_anual = faixa salarial do cliente\n* tipo_cartao = tipo de cartao do cliente\n* qtd_produtos = quantidade de produtos comprados nos últimos 12 meses\n* iteracoes_12m = quantidade de iterações/transacoes nos ultimos 12 meses\n* meses_inativo_12m = quantidade de meses que o cliente ficou inativo\n* limite_credito = limite de credito do cliente\n* valor_transacoes_12m = valor das transações dos ultimos 12 meses\n* qtd_transacoes_12m  = quantidade de transacoes dos ultimos 12 meses\n\nA tabela foi criada no **AWS Athena** junto com o **S3 Bucket** com uma versão dos dados disponibilizados em: https://github.com/andre-marcos-perez/ebac-course-utils/tree/main/datasettree/main/dataset","metadata":{}},{"cell_type":"markdown","source":"# Pacotes e Bibliotecas\n\nAbaixo será feita a importação dos pacotes e bibliotecas utilizados nesse projeto.","metadata":{}},{"cell_type":"code","source":"!pip install boto3 pandas pyathena","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-06T14:51:52.475183Z","iopub.execute_input":"2024-11-06T14:51:52.476146Z","iopub.status.idle":"2024-11-06T14:52:13.600582Z","shell.execute_reply.started":"2024-11-06T14:51:52.476080Z","shell.execute_reply":"2024-11-06T14:52:13.599354Z"},"collapsed":true,"jupyter":{"outputs_hidden":true}},"outputs":[{"name":"stdout","text":"Requirement already satisfied: boto3 in /opt/conda/lib/python3.10/site-packages (1.26.100)\nRequirement already satisfied: pandas in /opt/conda/lib/python3.10/site-packages (2.2.3)\nCollecting pyathena\n  Downloading pyathena-3.9.0-py3-none-any.whl.metadata (6.3 kB)\nCollecting botocore<1.30.0,>=1.29.100 (from boto3)\n  Downloading botocore-1.29.165-py3-none-any.whl.metadata (5.9 kB)\nRequirement already satisfied: jmespath<2.0.0,>=0.7.1 in /opt/conda/lib/python3.10/site-packages (from boto3) (1.0.1)\nRequirement already satisfied: s3transfer<0.7.0,>=0.6.0 in /opt/conda/lib/python3.10/site-packages (from boto3) (0.6.2)\nRequirement already satisfied: numpy>=1.22.4 in /opt/conda/lib/python3.10/site-packages (from pandas) (1.26.4)\nRequirement already satisfied: python-dateutil>=2.8.2 in /opt/conda/lib/python3.10/site-packages (from pandas) (2.9.0.post0)\nRequirement already satisfied: pytz>=2020.1 in /opt/conda/lib/python3.10/site-packages (from pandas) (2024.1)\nRequirement already satisfied: tzdata>=2022.7 in /opt/conda/lib/python3.10/site-packages (from pandas) (2024.1)\nRequirement already satisfied: fsspec in /opt/conda/lib/python3.10/site-packages (from pyathena) (2024.6.1)\nRequirement already satisfied: tenacity>=4.1.0 in /opt/conda/lib/python3.10/site-packages (from pyathena) (8.3.0)\nRequirement already satisfied: urllib3<1.27,>=1.25.4 in /opt/conda/lib/python3.10/site-packages (from botocore<1.30.0,>=1.29.100->boto3) (1.26.18)\nRequirement already satisfied: six>=1.5 in /opt/conda/lib/python3.10/site-packages (from python-dateutil>=2.8.2->pandas) (1.16.0)\nDownloading pyathena-3.9.0-py3-none-any.whl (75 kB)\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m75.5/75.5 kB\u001b[0m \u001b[31m2.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n\u001b[?25hDownloading botocore-1.29.165-py3-none-any.whl (11.0 MB)\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m11.0/11.0 MB\u001b[0m \u001b[31m65.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m:00:01\u001b[0m0:01\u001b[0m\n\u001b[?25hInstalling collected packages: botocore, pyathena\n  Attempting uninstall: botocore\n    Found existing installation: botocore 1.35.23\n    Uninstalling botocore-1.35.23:\n      Successfully uninstalled botocore-1.35.23\n\u001b[31mERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.\naiobotocore 2.15.1 requires botocore<1.35.24,>=1.35.16, but you have botocore 1.29.165 which is incompatible.\u001b[0m\u001b[31m\n\u001b[0mSuccessfully installed botocore-1.29.165 pyathena-3.9.0\n","output_type":"stream"}],"execution_count":2},{"cell_type":"code","source":"import os\nfrom getpass import getpass\nfrom pyathena import connect\nimport pandas as pd\nimport os\nimport warnings","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-06T14:52:18.320086Z","iopub.execute_input":"2024-11-06T14:52:18.321315Z","iopub.status.idle":"2024-11-06T14:52:18.772373Z","shell.execute_reply.started":"2024-11-06T14:52:18.321262Z","shell.execute_reply":"2024-11-06T14:52:18.771358Z"}},"outputs":[],"execution_count":3},{"cell_type":"markdown","source":"No seu projeto, estou utilizando várias bibliotecas essenciais. A **`os`** permite interagir com o sistema operacional, como manipular variáveis de ambiente. A **`getpass`** é usada para capturar senhas de forma segura sem exibi-las no terminal. O **`pyathena`** facilita a conexão com o Amazon Athena, permitindo executar consultas SQL diretamente no S3. A **`pandas`** é usada para manipular e visualizar os resultados das consultas SQL de forma eficiente. Por fim, **`warnings`** permite controlar e desativar avisos durante a execução do código, mantendo o ambiente mais limpo.\r\n","metadata":{}},{"cell_type":"code","source":"# Ignorar alertas no decorrer do código\nwarnings.filterwarnings(\"ignore\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-06T14:53:27.969845Z","iopub.execute_input":"2024-11-06T14:53:27.970610Z","iopub.status.idle":"2024-11-06T14:53:27.976331Z","shell.execute_reply.started":"2024-11-06T14:53:27.970548Z","shell.execute_reply":"2024-11-06T14:53:27.975186Z"}},"outputs":[],"execution_count":8},{"cell_type":"markdown","source":"As etapas abaixo são importantes para o credenciamento com o ambiente aws para utilizar o Athena utilizando o Python neste ambiente.","metadata":{}},{"cell_type":"code","source":"# Capturar o acesskey do aws\nacesskey = getpass()\nos.environ[\"AWS_ACCESS_KEY_ID\"] = acesskey","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-06T14:52:43.072855Z","iopub.execute_input":"2024-11-06T14:52:43.073820Z","iopub.status.idle":"2024-11-06T14:52:49.280366Z","shell.execute_reply.started":"2024-11-06T14:52:43.073772Z","shell.execute_reply":"2024-11-06T14:52:49.279167Z"}},"outputs":[{"output_type":"stream","name":"stdin","text":" ········\n"}],"execution_count":4},{"cell_type":"code","source":"# Capturar o secretacesskey do aws\nsecretacesskey = getpass()\nos.environ['AWS_SECRET_ACCESS_KEY'] = secretacesskey","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-06T14:52:58.751449Z","iopub.execute_input":"2024-11-06T14:52:58.751957Z","iopub.status.idle":"2024-11-06T14:53:01.335148Z","shell.execute_reply.started":"2024-11-06T14:52:58.751906Z","shell.execute_reply":"2024-11-06T14:53:01.334012Z"}},"outputs":[{"output_type":"stream","name":"stdin","text":" ········\n"}],"execution_count":5},{"cell_type":"markdown","source":"Após a coleta das chaves de acesso, farei a conexão do Athena utilizando o pyathena e em seguida criarei a tabela de crédito.","metadata":{}},{"cell_type":"code","source":"# Configurações de conexão com AWS Athena\nconn = connect(\n    aws_access_key_id=acesskey,\n    aws_secret_access_key=secretacesskey,\n    s3_staging_dir='s3://bucket-glgodoi-ebac-query-results/',\n    region_name='sa-east-1'\n)\n\n# Criação da tabela credito (SQL)\nquery = \"\"\"\nCREATE EXTERNAL TABLE IF NOT EXISTS default.credito ( \n  `idade` int,\n  `sexo` string,\n  `dependentes` int,\n  `escolaridade` string,\n  `estado_civil` string,\n  `salario_anual` string,\n  `tipo_cartao` string, \n  `qtd_produtos` bigint,\n  `iteracoes_12m` int,\n  `meses_inativo_12m` int,\n  `limite_credito` float,\n  `valor_transacoes_12m` float,\n  `qtd_transacoes_12m` int \n)\nROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'\nWITH SERDEPROPERTIES (\n  'serialization.format' = ',',\n  'field.delim' = ','\n) \nLOCATION 's3://bucket-glgodoi-projeto4sql/'\nTBLPROPERTIES ('has_encrypted_data'='false');\n\"\"\"\n\n# Executando a query\nwith conn.cursor() as cursor:\n    cursor.execute(query)\n    print(\"Query de criação de tabela executada com sucesso.\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-06T14:53:04.845298Z","iopub.execute_input":"2024-11-06T14:53:04.845732Z","iopub.status.idle":"2024-11-06T14:53:07.756764Z","shell.execute_reply.started":"2024-11-06T14:53:04.845688Z","shell.execute_reply":"2024-11-06T14:53:07.755431Z"}},"outputs":[{"name":"stdout","text":"Query de criação de tabela executada com sucesso.\n","output_type":"stream"}],"execution_count":6},{"cell_type":"markdown","source":"### 1. Exploração","metadata":{}},{"cell_type":"markdown","source":"Neste trecho de código, realizamos uma exploração inicial do dataset para entender melhor sua estrutura e características básicas:","metadata":{}},{"cell_type":"markdown","source":"**Quantas linhas temos na base de dados?**","metadata":{}},{"cell_type":"code","source":"# Contar linhas da tabela (SQL)\nquery = 'SELECT count(*) AS qtdLinhas FROM credito'\n\n# Executando a consulta e imprimindo o resultado\nresult = pd.read_sql(query, conn)\nresult.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-06T14:53:31.656544Z","iopub.execute_input":"2024-11-06T14:53:31.657000Z","iopub.status.idle":"2024-11-06T14:53:33.559078Z","shell.execute_reply.started":"2024-11-06T14:53:31.656956Z","shell.execute_reply":"2024-11-06T14:53:33.557974Z"}},"outputs":[{"execution_count":9,"output_type":"execute_result","data":{"text/plain":"   qtdLinhas\n0       2564","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>qtdLinhas</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>2564</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":9},{"cell_type":"markdown","source":"Abaixo é possível ver uma amostra de como são os dados no dataset.","metadata":{}},{"cell_type":"code","source":"# Consulta da tabela credito (SQL)\nquery = 'SELECT * FROM \"default\".\"credito\" LIMIT 10;'\n\n# Executando a consulta e imprimindo o resultado\ncredit = pd.read_sql(query, conn)\ncredit.head(10)\n","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2024-11-06T14:53:36.832850Z","iopub.execute_input":"2024-11-06T14:53:36.833326Z","iopub.status.idle":"2024-11-06T14:53:38.767914Z","shell.execute_reply.started":"2024-11-06T14:53:36.833281Z","shell.execute_reply":"2024-11-06T14:53:38.766773Z"}},"outputs":[{"execution_count":10,"output_type":"execute_result","data":{"text/plain":"   idade sexo  dependentes         escolaridade estado_civil   salario_anual  \\\n0     45    M            3         ensino medio       casado     $60K - $80K   \n1     49    F            5             mestrado     solteiro  menos que $40K   \n2     51    M            3             mestrado       casado    $80K - $120K   \n3     40    F            4         ensino medio           na  menos que $40K   \n4     40    M            3  sem educacao formal       casado     $60K - $80K   \n5     44    M            2             mestrado       casado     $40K - $60K   \n6     51    M            4                   na       casado         $120K +   \n7     32    M            0         ensino medio           na     $60K - $80K   \n8     37    M            3  sem educacao formal     solteiro     $60K - $80K   \n9     48    M            2             mestrado     solteiro    $80K - $120K   \n\n  tipo_cartao  qtd_produtos  iteracoes_12m  meses_inativo_12m  limite_credito  \\\n0        blue             5              3                  1        12691.51   \n1        blue             6              2                  1         8256.96   \n2        blue             4              0                  1         3418.56   \n3        blue             3              1                  4         3313.03   \n4        blue             5              0                  1         4716.22   \n5        blue             3              2                  1         4010.69   \n6        gold             6              3                  1        34516.72   \n7      silver             2              2                  2        29081.49   \n8        blue             5              0                  2        22352.50   \n9        blue             6              3                  3        11656.41   \n\n   valor_transacoes_12m  qtd_transacoes_12m  \n0               1144.90                  42  \n1               1291.45                  33  \n2               1887.72                  20  \n3               1171.56                  20  \n4                816.08                  28  \n5               1088.07                  24  \n6               1330.87                  31  \n7               1538.32                  36  \n8               1350.14                  24  \n9               1441.73                  32  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>idade</th>\n      <th>sexo</th>\n      <th>dependentes</th>\n      <th>escolaridade</th>\n      <th>estado_civil</th>\n      <th>salario_anual</th>\n      <th>tipo_cartao</th>\n      <th>qtd_produtos</th>\n      <th>iteracoes_12m</th>\n      <th>meses_inativo_12m</th>\n      <th>limite_credito</th>\n      <th>valor_transacoes_12m</th>\n      <th>qtd_transacoes_12m</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>45</td>\n      <td>M</td>\n      <td>3</td>\n      <td>ensino medio</td>\n      <td>casado</td>\n      <td>$60K - $80K</td>\n      <td>blue</td>\n      <td>5</td>\n      <td>3</td>\n      <td>1</td>\n      <td>12691.51</td>\n      <td>1144.90</td>\n      <td>42</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>49</td>\n      <td>F</td>\n      <td>5</td>\n      <td>mestrado</td>\n      <td>solteiro</td>\n      <td>menos que $40K</td>\n      <td>blue</td>\n      <td>6</td>\n      <td>2</td>\n      <td>1</td>\n      <td>8256.96</td>\n      <td>1291.45</td>\n      <td>33</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>51</td>\n      <td>M</td>\n      <td>3</td>\n      <td>mestrado</td>\n      <td>casado</td>\n      <td>$80K - $120K</td>\n      <td>blue</td>\n      <td>4</td>\n      <td>0</td>\n      <td>1</td>\n      <td>3418.56</td>\n      <td>1887.72</td>\n      <td>20</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>40</td>\n      <td>F</td>\n      <td>4</td>\n      <td>ensino medio</td>\n      <td>na</td>\n      <td>menos que $40K</td>\n      <td>blue</td>\n      <td>3</td>\n      <td>1</td>\n      <td>4</td>\n      <td>3313.03</td>\n      <td>1171.56</td>\n      <td>20</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>40</td>\n      <td>M</td>\n      <td>3</td>\n      <td>sem educacao formal</td>\n      <td>casado</td>\n      <td>$60K - $80K</td>\n      <td>blue</td>\n      <td>5</td>\n      <td>0</td>\n      <td>1</td>\n      <td>4716.22</td>\n      <td>816.08</td>\n      <td>28</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>44</td>\n      <td>M</td>\n      <td>2</td>\n      <td>mestrado</td>\n      <td>casado</td>\n      <td>$40K - $60K</td>\n      <td>blue</td>\n      <td>3</td>\n      <td>2</td>\n      <td>1</td>\n      <td>4010.69</td>\n      <td>1088.07</td>\n      <td>24</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>51</td>\n      <td>M</td>\n      <td>4</td>\n      <td>na</td>\n      <td>casado</td>\n      <td>$120K +</td>\n      <td>gold</td>\n      <td>6</td>\n      <td>3</td>\n      <td>1</td>\n      <td>34516.72</td>\n      <td>1330.87</td>\n      <td>31</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>32</td>\n      <td>M</td>\n      <td>0</td>\n      <td>ensino medio</td>\n      <td>na</td>\n      <td>$60K - $80K</td>\n      <td>silver</td>\n      <td>2</td>\n      <td>2</td>\n      <td>2</td>\n      <td>29081.49</td>\n      <td>1538.32</td>\n      <td>36</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>37</td>\n      <td>M</td>\n      <td>3</td>\n      <td>sem educacao formal</td>\n      <td>solteiro</td>\n      <td>$60K - $80K</td>\n      <td>blue</td>\n      <td>5</td>\n      <td>0</td>\n      <td>2</td>\n      <td>22352.50</td>\n      <td>1350.14</td>\n      <td>24</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>48</td>\n      <td>M</td>\n      <td>2</td>\n      <td>mestrado</td>\n      <td>solteiro</td>\n      <td>$80K - $120K</td>\n      <td>blue</td>\n      <td>6</td>\n      <td>3</td>\n      <td>3</td>\n      <td>11656.41</td>\n      <td>1441.73</td>\n      <td>32</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":10},{"cell_type":"markdown","source":"> É possível reparar que existem algumas informações nulas na tabela (valor na), vamos olhar mais de perto para os valores de cada coluna! ","metadata":{}},{"cell_type":"markdown","source":"**Quais os tipos dados ela possuí?**","metadata":{}},{"cell_type":"code","source":"# Exibir os tipos de dados da tabela (SQL)\nquery = 'DESCRIBE credito'\n\n# Executando a consulta e obtendo o resultado\nwith conn.cursor() as cursor:\n    cursor.execute(query)\n    result = cursor.fetchall()  # Obtém todas as linhas do resultado\n\n# Limpando os dados e exibindo de forma mais legível\nfor row in result:\n    # Limpa e separa os dados em partes\n    cleaned_row = [col.strip() for col in row[0].split('\\t') if col.strip()]\n    print(cleaned_row)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-06T14:53:44.505931Z","iopub.execute_input":"2024-11-06T14:53:44.506378Z","iopub.status.idle":"2024-11-06T14:53:46.533680Z","shell.execute_reply.started":"2024-11-06T14:53:44.506337Z","shell.execute_reply":"2024-11-06T14:53:46.532438Z"}},"outputs":[{"name":"stdout","text":"['idade', 'int']\n['sexo', 'string']\n['dependentes', 'int']\n['escolaridade', 'string']\n['estado_civil', 'string']\n['salario_anual', 'string']\n['tipo_cartao', 'string']\n['qtd_produtos', 'bigint']\n['iteracoes_12m', 'int']\n['meses_inativo_12m', 'int']\n['limite_credito', 'float']\n['valor_transacoes_12m', 'float']\n['qtd_transacoes_12m', 'int']\n","output_type":"stream"}],"execution_count":11},{"cell_type":"markdown","source":"Agora que ja está claro os tipos de dados, vamos olhar mais atentamente para as varíaveis que não são numéricas.\n\n**Quais os tipos de escolaridade presentes no dataset?**","metadata":{}},{"cell_type":"code","source":"# Listar escolaridades distintas da tabela (SQL)\nquery = 'SELECT DISTINCT escolaridade FROM credito'\n\n# Executando a consulta e imprimindo o resultado\nresult = pd.read_sql(query, conn)\nresult.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-06T14:53:58.437758Z","iopub.execute_input":"2024-11-06T14:53:58.438225Z","iopub.status.idle":"2024-11-06T14:54:00.346287Z","shell.execute_reply.started":"2024-11-06T14:53:58.438181Z","shell.execute_reply":"2024-11-06T14:54:00.345225Z"}},"outputs":[{"execution_count":12,"output_type":"execute_result","data":{"text/plain":"          escolaridade\n0  sem educacao formal\n1                   na\n2         ensino medio\n3             mestrado\n4            graduacao","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>escolaridade</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>sem educacao formal</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>na</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>ensino medio</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>mestrado</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>graduacao</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":12},{"cell_type":"markdown","source":"> Os dados contam com vários níveis de escolaridade e é possível perceber que existe valores nulos (na) no dataset, que serão tratados mais tarde.","metadata":{}},{"cell_type":"markdown","source":"**Quais são os tipos de estado_civil disponíveis no dataset?**","metadata":{}},{"cell_type":"code","source":"# Listar estados civis distintos da tabela (SQL)\nquery = 'SELECT DISTINCT estado_civil  FROM credito'\n\n# Executando a consulta e imprimindo o resultado\nresult = pd.read_sql(query, conn)\nresult.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-06T14:54:02.947164Z","iopub.execute_input":"2024-11-06T14:54:02.947956Z","iopub.status.idle":"2024-11-06T14:54:04.853444Z","shell.execute_reply.started":"2024-11-06T14:54:02.947911Z","shell.execute_reply":"2024-11-06T14:54:04.852051Z"}},"outputs":[{"execution_count":13,"output_type":"execute_result","data":{"text/plain":"  estado_civil\n0     solteiro\n1       casado\n2   divorciado\n3           na","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>estado_civil</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>solteiro</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>casado</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>divorciado</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>na</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":13},{"cell_type":"markdown","source":"> Novamente é possível notar valores nulos, agora também nos dados de estado civil.","metadata":{}},{"cell_type":"markdown","source":"**Quais são os tipos de salario_anual disponíveis no dataset?**","metadata":{}},{"cell_type":"code","source":"# Listar salários anuais distintos da tabela (SQL)\nquery = 'SELECT DISTINCT salario_anual  FROM credito'\n\n# Executando a consulta e imprimindo o resultado\nresult = pd.read_sql(query, conn)\nresult.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-06T14:54:07.127006Z","iopub.execute_input":"2024-11-06T14:54:07.127455Z","iopub.status.idle":"2024-11-06T14:54:09.038351Z","shell.execute_reply.started":"2024-11-06T14:54:07.127414Z","shell.execute_reply":"2024-11-06T14:54:09.037142Z"}},"outputs":[{"execution_count":14,"output_type":"execute_result","data":{"text/plain":"    salario_anual\n0  menos que $40K\n1              na\n2     $60K - $80K\n3     $40K - $60K\n4         $120K +","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>salario_anual</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>menos que $40K</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>na</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>$60K - $80K</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>$40K - $60K</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>$120K +</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":14},{"cell_type":"markdown","source":"> Os salários nesse dataset não estão expostos com o valor exato que o cliente ganha. O que está informado é a faixa salarial de cada um. Também contem dados nulos.","metadata":{}},{"cell_type":"markdown","source":"**Quais são os tipos de cartão presentes no dataset?**","metadata":{}},{"cell_type":"code","source":"# Listar os tipos de cartões distintos da tabela (SQL)\nquery = 'SELECT DISTINCT tipo_cartao FROM credito'\n\n# Executando a consulta e imprimindo o resultado\nresult = pd.read_sql(query, conn)\nresult.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-06T14:54:11.868605Z","iopub.execute_input":"2024-11-06T14:54:11.869098Z","iopub.status.idle":"2024-11-06T14:54:13.746901Z","shell.execute_reply.started":"2024-11-06T14:54:11.869054Z","shell.execute_reply":"2024-11-06T14:54:13.745765Z"}},"outputs":[{"execution_count":15,"output_type":"execute_result","data":{"text/plain":"  tipo_cartao\n0        blue\n1        gold\n2    platinum\n3      silver","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>tipo_cartao</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>blue</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>gold</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>platinum</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>silver</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":15},{"cell_type":"markdown","source":"> Aqui não há necessidade de tratar valores nulos.","metadata":{}}]}