{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[],"dockerImageVersionId":30786,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"# **Exploração e análise de dados de crédito com SQL**\n\n---\n\nAutor: **Gabriel Lino**\n\n<div style=\"display: flex; gap: 10px;\"> \n  <a href=\"mailto:gabriel.godoitb@gmail.com\"><img src=\"https://img.shields.io/badge/-Gmail-%23333?style=for-the-badge&logo=gmail&logoColor=white\" target=\"_blank\"></a>\n  <a href=\"https://www.linkedin.com/in/glgodoi\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-LinkedIn-%230077B5?style=for-the-badge&logo=linkedin&logoColor=white\" target=\"_blank\"></a>  \n  <a href=\"https://github.com/GLK-7\" target=\"_blank\"><img src=\"https://img.shields.io/badge/github-%23121011.svg?style=for-the-badge&logo=github&logoColor=white\" target=\"_blank\"></a>  \n</div>\n\n---","metadata":{}},{"cell_type":"markdown","source":"# **Tópicos**\n\n<ol type=\"1\">\n    <li>Exploração;</li>\n    <li>Análise de Dados;</li>\n    <li>Conclusões;</li>\n</ol>","metadata":{}},{"cell_type":"markdown","source":"# Descrição\n\n*Esse notebook faz parte do curso SQL para análise de dados da EBAC.*\n\nNeste projeto, realizo uma exploração e análise detalhada de um conjunto de dados de crédito utilizando o poder do Amazon Athena e do Amazon S3 para consultas SQL. Combinando a infraestrutura escalável da AWS com o ambiente interativo do Kaggle, executo consultas eficientes para extrair insights relevantes sobre os dados. Além disso, utilizo a biblioteca pandas para carregar e visualizar os resultados das consultas, facilitando a análise e interpretação dos dados.\n\nEste projeto busca demonstrar como ferramentas baseadas em cloud computing podem ser integradas para criar pipelines de análise de dados robustos e ágeis, possibilitando uma exploração aprofundada dos dados e auxiliando na geração de insights para tomadas de decisões informadas.","metadata":{}},{"cell_type":"markdown","source":"## Os dados: \n\nOs dados representam informações de clientes de um banco e contam com as seguintes colunas: \n\n* idade = idade do cliente\n* sexo = sexo do cliente (F ou M)\n* dependentes = número de dependentes do cliente\n* escolaridade = nível de escolaridade do clientes\n* salario_anual = faixa salarial do cliente\n* tipo_cartao = tipo de cartao do cliente\n* qtd_produtos = quantidade de produtos comprados nos últimos 12 meses\n* iteracoes_12m = quantidade de iterações/transacoes nos ultimos 12 meses\n* meses_inativo_12m = quantidade de meses que o cliente ficou inativo\n* limite_credito = limite de credito do cliente\n* valor_transacoes_12m = valor das transações dos ultimos 12 meses\n* qtd_transacoes_12m  = quantidade de transacoes dos ultimos 12 meses\n\nA tabela foi criada no **AWS Athena** junto com o **S3 Bucket** com uma versão dos dados disponibilizados em: https://github.com/andre-marcos-perez/ebac-course-utils/tree/main/datasettree/main/dataset","metadata":{}},{"cell_type":"markdown","source":"# Pacotes e Bibliotecas\n\nAbaixo será feita a importação dos pacotes e bibliotecas utilizados nesse projeto.","metadata":{}},{"cell_type":"code","source":"!pip install boto3 pandas pyathena","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-06T14:51:52.475183Z","iopub.execute_input":"2024-11-06T14:51:52.476146Z","iopub.status.idle":"2024-11-06T14:52:13.600582Z","shell.execute_reply.started":"2024-11-06T14:51:52.476080Z","shell.execute_reply":"2024-11-06T14:52:13.599354Z"},"collapsed":true,"jupyter":{"outputs_hidden":true}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"import os\nfrom getpass import getpass\nfrom pyathena import connect\nimport pandas as pd\nimport os\nimport warnings","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-06T15:00:59.374331Z","iopub.execute_input":"2024-11-06T15:00:59.374858Z","iopub.status.idle":"2024-11-06T15:00:59.403103Z","shell.execute_reply.started":"2024-11-06T15:00:59.374799Z","shell.execute_reply":"2024-11-06T15:00:59.400596Z"}},"outputs":[{"traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mModuleNotFoundError\u001b[0m                       Traceback (most recent call last)","Cell \u001b[0;32mIn[2], line 3\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[38;5;28;01mimport\u001b[39;00m \u001b[38;5;21;01mos\u001b[39;00m\n\u001b[1;32m      2\u001b[0m \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01mgetpass\u001b[39;00m \u001b[38;5;28;01mimport\u001b[39;00m getpass\n\u001b[0;32m----> 3\u001b[0m \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01mpyathena\u001b[39;00m \u001b[38;5;28;01mimport\u001b[39;00m connect\n\u001b[1;32m      4\u001b[0m \u001b[38;5;28;01mimport\u001b[39;00m \u001b[38;5;21;01mpandas\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m \u001b[38;5;21;01mpd\u001b[39;00m\n\u001b[1;32m      5\u001b[0m \u001b[38;5;28;01mimport\u001b[39;00m \u001b[38;5;21;01mos\u001b[39;00m\n","\u001b[0;31mModuleNotFoundError\u001b[0m: No module named 'pyathena'"],"ename":"ModuleNotFoundError","evalue":"No module named 'pyathena'","output_type":"error"}],"execution_count":2},{"cell_type":"markdown","source":"No seu projeto, estou utilizando várias bibliotecas essenciais. A **`os`** permite interagir com o sistema operacional, como manipular variáveis de ambiente. A **`getpass`** é usada para capturar senhas de forma segura sem exibi-las no terminal. O **`pyathena`** facilita a conexão com o Amazon Athena, permitindo executar consultas SQL diretamente no S3. A **`pandas`** é usada para manipular e visualizar os resultados das consultas SQL de forma eficiente. Por fim, **`warnings`** permite controlar e desativar avisos durante a execução do código, mantendo o ambiente mais limpo.\r\n","metadata":{}},{"cell_type":"code","source":"# Ignorar alertas no decorrer do código\nwarnings.filterwarnings(\"ignore\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-06T14:53:27.969845Z","iopub.execute_input":"2024-11-06T14:53:27.970610Z","iopub.status.idle":"2024-11-06T14:53:27.976331Z","shell.execute_reply.started":"2024-11-06T14:53:27.970548Z","shell.execute_reply":"2024-11-06T14:53:27.975186Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"As etapas abaixo são importantes para o credenciamento com o ambiente aws para utilizar o Athena utilizando o Python neste ambiente.","metadata":{}},{"cell_type":"code","source":"# Capturar o acesskey do aws\nacesskey = getpass()\nos.environ[\"AWS_ACCESS_KEY_ID\"] = acesskey","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-06T14:52:43.072855Z","iopub.execute_input":"2024-11-06T14:52:43.073820Z","iopub.status.idle":"2024-11-06T14:52:49.280366Z","shell.execute_reply.started":"2024-11-06T14:52:43.073772Z","shell.execute_reply":"2024-11-06T14:52:49.279167Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# Capturar o secretacesskey do aws\nsecretacesskey = getpass()\nos.environ['AWS_SECRET_ACCESS_KEY'] = secretacesskey","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-06T14:52:58.751449Z","iopub.execute_input":"2024-11-06T14:52:58.751957Z","iopub.status.idle":"2024-11-06T14:53:01.335148Z","shell.execute_reply.started":"2024-11-06T14:52:58.751906Z","shell.execute_reply":"2024-11-06T14:53:01.334012Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"Após a coleta das chaves de acesso, farei a conexão do Athena utilizando o pyathena e em seguida criarei a tabela de crédito.","metadata":{}},{"cell_type":"code","source":"# Configurações de conexão com AWS Athena\nconn = connect(\n    aws_access_key_id=acesskey,\n    aws_secret_access_key=secretacesskey,\n    s3_staging_dir='s3://bucket-glgodoi-ebac-query-results/',\n    region_name='sa-east-1'\n)\n\n# Criação da tabela credito (SQL)\nquery = \"\"\"\nCREATE EXTERNAL TABLE IF NOT EXISTS default.credito ( \n  `idade` int,\n  `sexo` string,\n  `dependentes` int,\n  `escolaridade` string,\n  `estado_civil` string,\n  `salario_anual` string,\n  `tipo_cartao` string, \n  `qtd_produtos` bigint,\n  `iteracoes_12m` int,\n  `meses_inativo_12m` int,\n  `limite_credito` float,\n  `valor_transacoes_12m` float,\n  `qtd_transacoes_12m` int \n)\nROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'\nWITH SERDEPROPERTIES (\n  'serialization.format' = ',',\n  'field.delim' = ','\n) \nLOCATION 's3://bucket-glgodoi-projeto4sql/'\nTBLPROPERTIES ('has_encrypted_data'='false');\n\"\"\"\n\n# Executando a query\nwith conn.cursor() as cursor:\n    cursor.execute(query)\n    print(\"Query de criação de tabela executada com sucesso.\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-06T14:53:04.845298Z","iopub.execute_input":"2024-11-06T14:53:04.845732Z","iopub.status.idle":"2024-11-06T14:53:07.756764Z","shell.execute_reply.started":"2024-11-06T14:53:04.845688Z","shell.execute_reply":"2024-11-06T14:53:07.755431Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"### 1. Exploração","metadata":{}},{"cell_type":"markdown","source":"Neste trecho de código, realizamos uma exploração inicial do dataset para entender melhor sua estrutura e características básicas:","metadata":{}},{"cell_type":"markdown","source":"**Quantas linhas temos na base de dados?**","metadata":{}},{"cell_type":"code","source":"# Contar linhas da tabela (SQL)\nquery = 'SELECT count(*) AS qtdLinhas FROM credito'\n\n# Executando a consulta e imprimindo o resultado\nresult = pd.read_sql(query, conn)\nresult.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-06T14:53:31.656544Z","iopub.execute_input":"2024-11-06T14:53:31.657000Z","iopub.status.idle":"2024-11-06T14:53:33.559078Z","shell.execute_reply.started":"2024-11-06T14:53:31.656956Z","shell.execute_reply":"2024-11-06T14:53:33.557974Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"Abaixo é possível ver uma amostra de como são os dados no dataset.","metadata":{}},{"cell_type":"code","source":"# Consulta da tabela credito (SQL)\nquery = 'SELECT * FROM \"default\".\"credito\" LIMIT 10;'\n\n# Executando a consulta e imprimindo o resultado\ncredit = pd.read_sql(query, conn)\ncredit.head(10)\n","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2024-11-06T14:53:36.832850Z","iopub.execute_input":"2024-11-06T14:53:36.833326Z","iopub.status.idle":"2024-11-06T14:53:38.767914Z","shell.execute_reply.started":"2024-11-06T14:53:36.833281Z","shell.execute_reply":"2024-11-06T14:53:38.766773Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"> É possível reparar que existem algumas informações nulas na tabela (valor na), vamos olhar mais de perto para os valores de cada coluna! ","metadata":{}},{"cell_type":"markdown","source":"**Quais os tipos dados ela possuí?**","metadata":{}},{"cell_type":"code","source":"# Exibir os tipos de dados da tabela (SQL)\nquery = 'DESCRIBE credito'\n\n# Executando a consulta e obtendo o resultado\nwith conn.cursor() as cursor:\n    cursor.execute(query)\n    result = cursor.fetchall()  # Obtém todas as linhas do resultado\n\n# Limpando os dados e exibindo de forma mais legível\nfor row in result:\n    # Limpa e separa os dados em partes\n    cleaned_row = [col.strip() for col in row[0].split('\\t') if col.strip()]\n    print(cleaned_row)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-06T14:53:44.505931Z","iopub.execute_input":"2024-11-06T14:53:44.506378Z","iopub.status.idle":"2024-11-06T14:53:46.533680Z","shell.execute_reply.started":"2024-11-06T14:53:44.506337Z","shell.execute_reply":"2024-11-06T14:53:46.532438Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"Agora que ja está claro os tipos de dados, vamos olhar mais atentamente para as varíaveis que não são numéricas.\n\n**Quais os tipos de escolaridade presentes no dataset?**","metadata":{}},{"cell_type":"code","source":"# Listar escolaridades distintas da tabela (SQL)\nquery = 'SELECT DISTINCT escolaridade FROM credito'\n\n# Executando a consulta e imprimindo o resultado\nresult = pd.read_sql(query, conn)\nresult.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-06T14:53:58.437758Z","iopub.execute_input":"2024-11-06T14:53:58.438225Z","iopub.status.idle":"2024-11-06T14:54:00.346287Z","shell.execute_reply.started":"2024-11-06T14:53:58.438181Z","shell.execute_reply":"2024-11-06T14:54:00.345225Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"> Os dados contam com vários níveis de escolaridade e é possível perceber que existe valores nulos (na) no dataset, que serão tratados mais tarde.","metadata":{}},{"cell_type":"markdown","source":"**Quais são os tipos de estado_civil disponíveis no dataset?**","metadata":{}},{"cell_type":"code","source":"# Listar estados civis distintos da tabela (SQL)\nquery = 'SELECT DISTINCT estado_civil  FROM credito'\n\n# Executando a consulta e imprimindo o resultado\nresult = pd.read_sql(query, conn)\nresult.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-06T14:54:02.947164Z","iopub.execute_input":"2024-11-06T14:54:02.947956Z","iopub.status.idle":"2024-11-06T14:54:04.853444Z","shell.execute_reply.started":"2024-11-06T14:54:02.947911Z","shell.execute_reply":"2024-11-06T14:54:04.852051Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"> Novamente é possível notar valores nulos, agora também nos dados de estado civil.","metadata":{}},{"cell_type":"markdown","source":"**Quais são os tipos de salario_anual disponíveis no dataset?**","metadata":{}},{"cell_type":"code","source":"# Listar salários anuais distintos da tabela (SQL)\nquery = 'SELECT DISTINCT salario_anual  FROM credito'\n\n# Executando a consulta e imprimindo o resultado\nresult = pd.read_sql(query, conn)\nresult.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-06T14:54:07.127006Z","iopub.execute_input":"2024-11-06T14:54:07.127455Z","iopub.status.idle":"2024-11-06T14:54:09.038351Z","shell.execute_reply.started":"2024-11-06T14:54:07.127414Z","shell.execute_reply":"2024-11-06T14:54:09.037142Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"> Os salários nesse dataset não estão expostos com o valor exato que o cliente ganha. O que está informado é a faixa salarial de cada um. Também contem dados nulos.","metadata":{}},{"cell_type":"markdown","source":"**Quais são os tipos de cartão presentes no dataset?**","metadata":{}},{"cell_type":"code","source":"# Listar os tipos de cartões distintos da tabela (SQL)\nquery = 'SELECT DISTINCT tipo_cartao FROM credito'\n\n# Executando a consulta e imprimindo o resultado\nresult = pd.read_sql(query, conn)\nresult.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-06T14:54:11.868605Z","iopub.execute_input":"2024-11-06T14:54:11.869098Z","iopub.status.idle":"2024-11-06T14:54:13.746901Z","shell.execute_reply.started":"2024-11-06T14:54:11.869054Z","shell.execute_reply":"2024-11-06T14:54:13.745765Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"> Aqui não há necessidade de tratar valores nulos.","metadata":{}},{"cell_type":"markdown","source":"Uma vez com os dados explorados, podemos avançar para análises mais profundas para entender o que está acontecendo no banco de dados. Após compreender as variáveis e a estrutura dos dados, podemos formular perguntas que nos ajudem a tirar insights valiosos. Por exemplo, podemos analisar a distribuição dos clientes de acordo com sua faixa salarial e responder a perguntas como: **Quantos clientes pertencem a cada faixa salarial nesse banco de dados?** Esse tipo de análise nos permite segmentar os clientes com base em características financeiras e identificar possíveis padrões ou tendências relacionadas à faixa de renda.","metadata":{}},{"cell_type":"code","source":"# Contar os dados de cada tipo de salário agrupando por salário anual (SQL)\nquery = 'SELECT count(*), salario_anual from credito group by salario_anual'\n\n# Executando a consulta e imprimindo o resultado\nresult = pd.read_sql(query, conn)\nresult.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-06T15:00:42.731080Z","iopub.execute_input":"2024-11-06T15:00:42.732187Z","iopub.status.idle":"2024-11-06T15:00:43.063854Z","shell.execute_reply.started":"2024-11-06T15:00:42.732105Z","shell.execute_reply":"2024-11-06T15:00:43.062398Z"}},"outputs":[{"traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","Cell \u001b[0;32mIn[1], line 5\u001b[0m\n\u001b[1;32m      2\u001b[0m query \u001b[38;5;241m=\u001b[39m \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mSELECT count(*), salario_anual from credito group by salario_anual\u001b[39m\u001b[38;5;124m'\u001b[39m\n\u001b[1;32m      4\u001b[0m \u001b[38;5;66;03m# Executando a consulta e imprimindo o resultado\u001b[39;00m\n\u001b[0;32m----> 5\u001b[0m result \u001b[38;5;241m=\u001b[39m \u001b[43mpd\u001b[49m\u001b[38;5;241m.\u001b[39mread_sql(query, conn)\n\u001b[1;32m      6\u001b[0m result\u001b[38;5;241m.\u001b[39mhead()\n","\u001b[0;31mNameError\u001b[0m: name 'pd' is not defined"],"ename":"NameError","evalue":"name 'pd' is not defined","output_type":"error"}],"execution_count":1}]}