{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[],"dockerImageVersionId":30786,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"# **Exploração e análise de dados de crédito com SQL**\n\n---\n\nAutor: **Gabriel Lino**\n\n<div style=\"display: flex; gap: 10px;\"> \n  <a href=\"mailto:gabriel.godoitb@gmail.com\"><img src=\"https://img.shields.io/badge/-Gmail-%23333?style=for-the-badge&logo=gmail&logoColor=white\" target=\"_blank\"></a>\n  <a href=\"https://www.linkedin.com/in/glgodoi\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-LinkedIn-%230077B5?style=for-the-badge&logo=linkedin&logoColor=white\" target=\"_blank\"></a>  \n  <a href=\"https://github.com/GLK-7\" target=\"_blank\"><img src=\"https://img.shields.io/badge/github-%23121011.svg?style=for-the-badge&logo=github&logoColor=white\" target=\"_blank\"></a>  \n</div>\n\n---","metadata":{}},{"cell_type":"markdown","source":"# **Tópicos**\n\n<ol type=\"1\">\n    <li>Exploração;</li>\n    <li>Análise de Dados;</li>\n    <li>Conclusões;</li>\n</ol>","metadata":{}},{"cell_type":"markdown","source":"# Descrição\n\n*Esse notebook faz parte do curso SQL para análise de dados da EBAC.*\n\nNeste projeto, realizo uma exploração e análise detalhada de um conjunto de dados de crédito utilizando o poder do Amazon `Athena` e do Amazon `S3` para consultas `SQL`. Combinando a infraestrutura escalável da `AWS` com o ambiente interativo do `Kaggle`, executo consultas eficientes para extrair insights relevantes sobre os dados. Além disso, utilizo a biblioteca `pandas` para carregar e visualizar os resultados das consultas, facilitando a análise e interpretação dos dados.\n\nEste projeto busca demonstrar como ferramentas baseadas em cloud computing podem ser integradas para criar pipelines de análise de dados robustos e ágeis, possibilitando uma exploração aprofundada dos dados e auxiliando na geração de insights para tomadas de decisões informadas.","metadata":{}},{"cell_type":"markdown","source":"## Os dados: \n\nOs dados representam informações de clientes de um banco e contam com as seguintes colunas: \n\n* idade = idade do cliente\n* sexo = sexo do cliente (F ou M)\n* dependentes = número de dependentes do cliente\n* escolaridade = nível de escolaridade do clientes\n* salario_anual = faixa salarial do cliente\n* tipo_cartao = tipo de cartao do cliente\n* qtd_produtos = quantidade de produtos comprados nos últimos 12 meses\n* iteracoes_12m = quantidade de iterações/transacoes nos ultimos 12 meses\n* meses_inativo_12m = quantidade de meses que o cliente ficou inativo\n* limite_credito = limite de credito do cliente\n* valor_transacoes_12m = valor das transações dos ultimos 12 meses\n* qtd_transacoes_12m  = quantidade de transacoes dos ultimos 12 meses\n\nA tabela foi criada no **AWS Athena** junto com o **S3 Bucket** com uma versão dos dados disponibilizados em: https://github.com/andre-marcos-perez/ebac-course-utils/tree/main/datasettree/main/dataset","metadata":{}},{"cell_type":"markdown","source":"# Pacotes e Bibliotecas\n\nAbaixo será feita a importação dos pacotes e bibliotecas utilizados nesse projeto.","metadata":{}},{"cell_type":"code","source":"!pip install boto3 pandas pyathena","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-06T16:09:41.148740Z","iopub.execute_input":"2024-11-06T16:09:41.149681Z","iopub.status.idle":"2024-11-06T16:10:03.815790Z","shell.execute_reply.started":"2024-11-06T16:09:41.149616Z","shell.execute_reply":"2024-11-06T16:10:03.814328Z"},"collapsed":true,"jupyter":{"outputs_hidden":true}},"outputs":[{"name":"stdout","text":"Requirement already satisfied: boto3 in /opt/conda/lib/python3.10/site-packages (1.26.100)\nRequirement already satisfied: pandas in /opt/conda/lib/python3.10/site-packages (2.2.3)\nCollecting pyathena\n  Downloading pyathena-3.9.0-py3-none-any.whl.metadata (6.3 kB)\nCollecting botocore<1.30.0,>=1.29.100 (from boto3)\n  Downloading botocore-1.29.165-py3-none-any.whl.metadata (5.9 kB)\nRequirement already satisfied: jmespath<2.0.0,>=0.7.1 in /opt/conda/lib/python3.10/site-packages (from boto3) (1.0.1)\nRequirement already satisfied: s3transfer<0.7.0,>=0.6.0 in /opt/conda/lib/python3.10/site-packages (from boto3) (0.6.2)\nRequirement already satisfied: numpy>=1.22.4 in /opt/conda/lib/python3.10/site-packages (from pandas) (1.26.4)\nRequirement already satisfied: python-dateutil>=2.8.2 in /opt/conda/lib/python3.10/site-packages (from pandas) (2.9.0.post0)\nRequirement already satisfied: pytz>=2020.1 in /opt/conda/lib/python3.10/site-packages (from pandas) (2024.1)\nRequirement already satisfied: tzdata>=2022.7 in /opt/conda/lib/python3.10/site-packages (from pandas) (2024.1)\nRequirement already satisfied: fsspec in /opt/conda/lib/python3.10/site-packages (from pyathena) (2024.6.1)\nRequirement already satisfied: tenacity>=4.1.0 in /opt/conda/lib/python3.10/site-packages (from pyathena) (8.3.0)\nRequirement already satisfied: urllib3<1.27,>=1.25.4 in /opt/conda/lib/python3.10/site-packages (from botocore<1.30.0,>=1.29.100->boto3) (1.26.18)\nRequirement already satisfied: six>=1.5 in /opt/conda/lib/python3.10/site-packages (from python-dateutil>=2.8.2->pandas) (1.16.0)\nDownloading pyathena-3.9.0-py3-none-any.whl (75 kB)\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m75.5/75.5 kB\u001b[0m \u001b[31m3.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n\u001b[?25hDownloading botocore-1.29.165-py3-none-any.whl (11.0 MB)\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m11.0/11.0 MB\u001b[0m \u001b[31m72.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m:00:01\u001b[0m0:01\u001b[0m\n\u001b[?25hInstalling collected packages: botocore, pyathena\n  Attempting uninstall: botocore\n    Found existing installation: botocore 1.35.23\n    Uninstalling botocore-1.35.23:\n      Successfully uninstalled botocore-1.35.23\n\u001b[31mERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.\naiobotocore 2.15.1 requires botocore<1.35.24,>=1.35.16, but you have botocore 1.29.165 which is incompatible.\u001b[0m\u001b[31m\n\u001b[0mSuccessfully installed botocore-1.29.165 pyathena-3.9.0\n","output_type":"stream"}],"execution_count":1},{"cell_type":"code","source":"import os\nfrom getpass import getpass\nfrom pyathena import connect\nimport pandas as pd\nimport os\nimport warnings\nimport matplotlib.pyplot as plt","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-06T16:17:39.774616Z","iopub.execute_input":"2024-11-06T16:17:39.775119Z","iopub.status.idle":"2024-11-06T16:17:39.781562Z","shell.execute_reply.started":"2024-11-06T16:17:39.775074Z","shell.execute_reply":"2024-11-06T16:17:39.780158Z"}},"outputs":[],"execution_count":21},{"cell_type":"markdown","source":"No seu projeto, estou utilizando várias bibliotecas essenciais. A **`os`** permite interagir com o sistema operacional, como manipular variáveis de ambiente. A **`getpass`** é usada para capturar senhas de forma segura sem exibi-las no terminal. O **`pyathena`** facilita a conexão com o Amazon Athena, permitindo executar consultas SQL diretamente no S3. A **`pandas`** é usada para manipular e visualizar os resultados das consultas SQL de forma eficiente. O **`warnings`** permite controlar e desativar avisos durante a execução do código, mantendo o ambiente mais limpo. Por fim, **`matplotlib`** permite gerar visualizações em forma de gráficos para exemplificar melhor os dados.\r\n","metadata":{}},{"cell_type":"code","source":"# Ignorar alertas no decorrer do código\nwarnings.filterwarnings(\"ignore\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-06T16:11:53.324454Z","iopub.execute_input":"2024-11-06T16:11:53.325650Z","iopub.status.idle":"2024-11-06T16:11:53.332811Z","shell.execute_reply.started":"2024-11-06T16:11:53.325448Z","shell.execute_reply":"2024-11-06T16:11:53.330859Z"}},"outputs":[],"execution_count":3},{"cell_type":"markdown","source":"As etapas abaixo são importantes para o credenciamento com o ambiente aws para utilizar o Athena utilizando o Python neste ambiente.","metadata":{}},{"cell_type":"code","source":"# Capturar o acesskey do aws\nacesskey = getpass()\nos.environ[\"AWS_ACCESS_KEY_ID\"] = acesskey","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-06T16:11:56.423334Z","iopub.execute_input":"2024-11-06T16:11:56.423921Z","iopub.status.idle":"2024-11-06T16:12:00.517960Z","shell.execute_reply.started":"2024-11-06T16:11:56.423868Z","shell.execute_reply":"2024-11-06T16:12:00.516792Z"}},"outputs":[{"output_type":"stream","name":"stdin","text":" ········\n"}],"execution_count":4},{"cell_type":"code","source":"# Capturar o secretacesskey do aws\nsecretacesskey = getpass()\nos.environ['AWS_SECRET_ACCESS_KEY'] = secretacesskey","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-06T16:12:02.689470Z","iopub.execute_input":"2024-11-06T16:12:02.689927Z","iopub.status.idle":"2024-11-06T16:12:06.515925Z","shell.execute_reply.started":"2024-11-06T16:12:02.689877Z","shell.execute_reply":"2024-11-06T16:12:06.514715Z"}},"outputs":[{"output_type":"stream","name":"stdin","text":" ········\n"}],"execution_count":5},{"cell_type":"markdown","source":"Após a coleta das chaves de acesso, farei a conexão do Athena utilizando o pyathena e em seguida criarei a tabela de crédito.","metadata":{}},{"cell_type":"code","source":"# Configurações de conexão com AWS Athena\nconn = connect(\n    aws_access_key_id=acesskey,\n    aws_secret_access_key=secretacesskey,\n    s3_staging_dir='s3://bucket-glgodoi-ebac-query-results/',\n    region_name='sa-east-1'\n)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-06T16:12:25.561296Z","iopub.execute_input":"2024-11-06T16:12:25.561949Z","iopub.status.idle":"2024-11-06T16:12:25.753344Z","shell.execute_reply.started":"2024-11-06T16:12:25.561903Z","shell.execute_reply":"2024-11-06T16:12:25.751792Z"}},"outputs":[],"execution_count":7},{"cell_type":"code","source":"# Criação da tabela credito (SQL)\nquery = \"\"\"\nCREATE EXTERNAL TABLE IF NOT EXISTS default.credito ( \n  `idade` int,\n  `sexo` string,\n  `dependentes` int,\n  `escolaridade` string,\n  `estado_civil` string,\n  `salario_anual` string,\n  `tipo_cartao` string, \n  `qtd_produtos` bigint,\n  `iteracoes_12m` int,\n  `meses_inativo_12m` int,\n  `limite_credito` float,\n  `valor_transacoes_12m` float,\n  `qtd_transacoes_12m` int \n)\nROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'\nWITH SERDEPROPERTIES (\n  'serialization.format' = ',',\n  'field.delim' = ','\n) \nLOCATION 's3://bucket-glgodoi-projeto4sql/'\nTBLPROPERTIES ('has_encrypted_data'='false');\n\"\"\"\n\n# Executando a query\nwith conn.cursor() as cursor:\n    cursor.execute(query)\n    print(\"Query de criação de tabela executada com sucesso.\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-06T16:12:33.937653Z","iopub.execute_input":"2024-11-06T16:12:33.938122Z","iopub.status.idle":"2024-11-06T16:12:36.399528Z","shell.execute_reply.started":"2024-11-06T16:12:33.938082Z","shell.execute_reply":"2024-11-06T16:12:36.398295Z"}},"outputs":[{"name":"stdout","text":"Query de criação de tabela executada com sucesso.\n","output_type":"stream"}],"execution_count":8},{"cell_type":"markdown","source":"## 1. Exploração","metadata":{}},{"cell_type":"markdown","source":"Neste trecho de código, realizamos uma exploração inicial do dataset para entender melhor sua estrutura e características básicas:","metadata":{}},{"cell_type":"markdown","source":"**Quantas linhas temos na base de dados?**","metadata":{}},{"cell_type":"code","source":"# Contar linhas da tabela (SQL)\nquery = 'SELECT count(*) AS qtdLinhas FROM credito'\n\n# Executando a consulta e imprimindo o resultado\nresult = pd.read_sql(query, conn)\nresult.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-06T16:12:49.653164Z","iopub.execute_input":"2024-11-06T16:12:49.653717Z","iopub.status.idle":"2024-11-06T16:12:52.500316Z","shell.execute_reply.started":"2024-11-06T16:12:49.653672Z","shell.execute_reply":"2024-11-06T16:12:52.498898Z"}},"outputs":[{"execution_count":9,"output_type":"execute_result","data":{"text/plain":"   qtdLinhas\n0       2564","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>qtdLinhas</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>2564</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":9},{"cell_type":"markdown","source":"Abaixo é possível ver uma amostra de como são os dados no dataset.","metadata":{}},{"cell_type":"code","source":"# Consulta da tabela credito (SQL)\nquery = 'SELECT * FROM \"default\".\"credito\" LIMIT 10;'\n\n# Executando a consulta e imprimindo o resultado\ncredit = pd.read_sql(query, conn)\ncredit.head(10)\n","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2024-11-06T16:12:54.904016Z","iopub.execute_input":"2024-11-06T16:12:54.904631Z","iopub.status.idle":"2024-11-06T16:12:56.900499Z","shell.execute_reply.started":"2024-11-06T16:12:54.904586Z","shell.execute_reply":"2024-11-06T16:12:56.899315Z"}},"outputs":[{"execution_count":10,"output_type":"execute_result","data":{"text/plain":"   idade sexo  dependentes         escolaridade estado_civil   salario_anual  \\\n0     45    M            3         ensino medio       casado     $60K - $80K   \n1     49    F            5             mestrado     solteiro  menos que $40K   \n2     51    M            3             mestrado       casado    $80K - $120K   \n3     40    F            4         ensino medio           na  menos que $40K   \n4     40    M            3  sem educacao formal       casado     $60K - $80K   \n5     44    M            2             mestrado       casado     $40K - $60K   \n6     51    M            4                   na       casado         $120K +   \n7     32    M            0         ensino medio           na     $60K - $80K   \n8     37    M            3  sem educacao formal     solteiro     $60K - $80K   \n9     48    M            2             mestrado     solteiro    $80K - $120K   \n\n  tipo_cartao  qtd_produtos  iteracoes_12m  meses_inativo_12m  limite_credito  \\\n0        blue             5              3                  1        12691.51   \n1        blue             6              2                  1         8256.96   \n2        blue             4              0                  1         3418.56   \n3        blue             3              1                  4         3313.03   \n4        blue             5              0                  1         4716.22   \n5        blue             3              2                  1         4010.69   \n6        gold             6              3                  1        34516.72   \n7      silver             2              2                  2        29081.49   \n8        blue             5              0                  2        22352.50   \n9        blue             6              3                  3        11656.41   \n\n   valor_transacoes_12m  qtd_transacoes_12m  \n0               1144.90                  42  \n1               1291.45                  33  \n2               1887.72                  20  \n3               1171.56                  20  \n4                816.08                  28  \n5               1088.07                  24  \n6               1330.87                  31  \n7               1538.32                  36  \n8               1350.14                  24  \n9               1441.73                  32  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>idade</th>\n      <th>sexo</th>\n      <th>dependentes</th>\n      <th>escolaridade</th>\n      <th>estado_civil</th>\n      <th>salario_anual</th>\n      <th>tipo_cartao</th>\n      <th>qtd_produtos</th>\n      <th>iteracoes_12m</th>\n      <th>meses_inativo_12m</th>\n      <th>limite_credito</th>\n      <th>valor_transacoes_12m</th>\n      <th>qtd_transacoes_12m</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>45</td>\n      <td>M</td>\n      <td>3</td>\n      <td>ensino medio</td>\n      <td>casado</td>\n      <td>$60K - $80K</td>\n      <td>blue</td>\n      <td>5</td>\n      <td>3</td>\n      <td>1</td>\n      <td>12691.51</td>\n      <td>1144.90</td>\n      <td>42</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>49</td>\n      <td>F</td>\n      <td>5</td>\n      <td>mestrado</td>\n      <td>solteiro</td>\n      <td>menos que $40K</td>\n      <td>blue</td>\n      <td>6</td>\n      <td>2</td>\n      <td>1</td>\n      <td>8256.96</td>\n      <td>1291.45</td>\n      <td>33</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>51</td>\n      <td>M</td>\n      <td>3</td>\n      <td>mestrado</td>\n      <td>casado</td>\n      <td>$80K - $120K</td>\n      <td>blue</td>\n      <td>4</td>\n      <td>0</td>\n      <td>1</td>\n      <td>3418.56</td>\n      <td>1887.72</td>\n      <td>20</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>40</td>\n      <td>F</td>\n      <td>4</td>\n      <td>ensino medio</td>\n      <td>na</td>\n      <td>menos que $40K</td>\n      <td>blue</td>\n      <td>3</td>\n      <td>1</td>\n      <td>4</td>\n      <td>3313.03</td>\n      <td>1171.56</td>\n      <td>20</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>40</td>\n      <td>M</td>\n      <td>3</td>\n      <td>sem educacao formal</td>\n      <td>casado</td>\n      <td>$60K - $80K</td>\n      <td>blue</td>\n      <td>5</td>\n      <td>0</td>\n      <td>1</td>\n      <td>4716.22</td>\n      <td>816.08</td>\n      <td>28</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>44</td>\n      <td>M</td>\n      <td>2</td>\n      <td>mestrado</td>\n      <td>casado</td>\n      <td>$40K - $60K</td>\n      <td>blue</td>\n      <td>3</td>\n      <td>2</td>\n      <td>1</td>\n      <td>4010.69</td>\n      <td>1088.07</td>\n      <td>24</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>51</td>\n      <td>M</td>\n      <td>4</td>\n      <td>na</td>\n      <td>casado</td>\n      <td>$120K +</td>\n      <td>gold</td>\n      <td>6</td>\n      <td>3</td>\n      <td>1</td>\n      <td>34516.72</td>\n      <td>1330.87</td>\n      <td>31</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>32</td>\n      <td>M</td>\n      <td>0</td>\n      <td>ensino medio</td>\n      <td>na</td>\n      <td>$60K - $80K</td>\n      <td>silver</td>\n      <td>2</td>\n      <td>2</td>\n      <td>2</td>\n      <td>29081.49</td>\n      <td>1538.32</td>\n      <td>36</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>37</td>\n      <td>M</td>\n      <td>3</td>\n      <td>sem educacao formal</td>\n      <td>solteiro</td>\n      <td>$60K - $80K</td>\n      <td>blue</td>\n      <td>5</td>\n      <td>0</td>\n      <td>2</td>\n      <td>22352.50</td>\n      <td>1350.14</td>\n      <td>24</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>48</td>\n      <td>M</td>\n      <td>2</td>\n      <td>mestrado</td>\n      <td>solteiro</td>\n      <td>$80K - $120K</td>\n      <td>blue</td>\n      <td>6</td>\n      <td>3</td>\n      <td>3</td>\n      <td>11656.41</td>\n      <td>1441.73</td>\n      <td>32</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":10},{"cell_type":"markdown","source":"> É possível reparar que existem algumas informações nulas na tabela (valor na), vamos olhar mais de perto para os valores de cada coluna! ","metadata":{}},{"cell_type":"markdown","source":"**Quais os tipos dados ela possuí?**","metadata":{}},{"cell_type":"code","source":"# Exibir os tipos de dados da tabela (SQL)\nquery = 'DESCRIBE credito'\n\n# Executando a consulta e obtendo o resultado\nwith conn.cursor() as cursor:\n    cursor.execute(query)\n    result = cursor.fetchall()  # Obtém todas as linhas do resultado\n\n# Limpando os dados e exibindo de forma mais legível\nfor row in result:\n    # Limpa e separa os dados em partes\n    cleaned_row = [col.strip() for col in row[0].split('\\t') if col.strip()]\n    print(cleaned_row)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-06T16:12:59.812903Z","iopub.execute_input":"2024-11-06T16:12:59.813990Z","iopub.status.idle":"2024-11-06T16:13:03.187385Z","shell.execute_reply.started":"2024-11-06T16:12:59.813935Z","shell.execute_reply":"2024-11-06T16:13:03.186073Z"}},"outputs":[{"name":"stdout","text":"['idade', 'int']\n['sexo', 'string']\n['dependentes', 'int']\n['escolaridade', 'string']\n['estado_civil', 'string']\n['salario_anual', 'string']\n['tipo_cartao', 'string']\n['qtd_produtos', 'bigint']\n['iteracoes_12m', 'int']\n['meses_inativo_12m', 'int']\n['limite_credito', 'float']\n['valor_transacoes_12m', 'float']\n['qtd_transacoes_12m', 'int']\n","output_type":"stream"}],"execution_count":11},{"cell_type":"markdown","source":"Agora que ja está claro os tipos de dados, vamos olhar mais atentamente para as varíaveis que não são numéricas.\n\n**Quais os tipos de escolaridade presentes no dataset?**","metadata":{}},{"cell_type":"code","source":"# Listar escolaridades distintas da tabela (SQL)\nquery = 'SELECT DISTINCT escolaridade FROM credito'\n\n# Executando a consulta e imprimindo o resultado\nresult = pd.read_sql(query, conn)\nresult.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-06T16:13:05.903955Z","iopub.execute_input":"2024-11-06T16:13:05.905247Z","iopub.status.idle":"2024-11-06T16:13:07.883924Z","shell.execute_reply.started":"2024-11-06T16:13:05.905195Z","shell.execute_reply":"2024-11-06T16:13:07.882705Z"}},"outputs":[{"execution_count":12,"output_type":"execute_result","data":{"text/plain":"   escolaridade\n0            na\n1      mestrado\n2     graduacao\n3     doutorado\n4  ensino medio","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>escolaridade</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>na</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>mestrado</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>graduacao</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>doutorado</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>ensino medio</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":12},{"cell_type":"markdown","source":"> Os dados contam com vários níveis de escolaridade e é possível perceber que existe valores nulos (na) no dataset, que serão tratados mais tarde.","metadata":{}},{"cell_type":"markdown","source":"**Quais são os tipos de estado_civil disponíveis no dataset?**","metadata":{}},{"cell_type":"code","source":"# Listar estados civis distintos da tabela (SQL)\nquery = 'SELECT DISTINCT estado_civil  FROM credito'\n\n# Executando a consulta e imprimindo o resultado\nresult = pd.read_sql(query, conn)\nresult.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-06T16:13:10.436232Z","iopub.execute_input":"2024-11-06T16:13:10.437140Z","iopub.status.idle":"2024-11-06T16:13:12.421006Z","shell.execute_reply.started":"2024-11-06T16:13:10.437093Z","shell.execute_reply":"2024-11-06T16:13:12.419845Z"}},"outputs":[{"execution_count":13,"output_type":"execute_result","data":{"text/plain":"  estado_civil\n0           na\n1   divorciado\n2     solteiro\n3       casado","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>estado_civil</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>na</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>divorciado</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>solteiro</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>casado</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":13},{"cell_type":"markdown","source":"> Novamente é possível notar valores nulos, agora também nos dados de estado civil.","metadata":{}},{"cell_type":"markdown","source":"**Quais são os tipos de salario_anual disponíveis no dataset?**","metadata":{}},{"cell_type":"code","source":"# Listar salários anuais distintos da tabela (SQL)\nquery = 'SELECT DISTINCT salario_anual  FROM credito'\n\n# Executando a consulta e imprimindo o resultado\nresult = pd.read_sql(query, conn)\nresult.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-06T16:13:15.435240Z","iopub.execute_input":"2024-11-06T16:13:15.435673Z","iopub.status.idle":"2024-11-06T16:13:17.415195Z","shell.execute_reply.started":"2024-11-06T16:13:15.435634Z","shell.execute_reply":"2024-11-06T16:13:17.414054Z"}},"outputs":[{"execution_count":14,"output_type":"execute_result","data":{"text/plain":"    salario_anual\n0    $80K - $120K\n1  menos que $40K\n2              na\n3     $60K - $80K\n4     $40K - $60K","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>salario_anual</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>$80K - $120K</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>menos que $40K</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>na</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>$60K - $80K</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>$40K - $60K</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":14},{"cell_type":"markdown","source":"> Os salários nesse dataset não estão expostos com o valor exato que o cliente ganha. O que está informado é a faixa salarial de cada um. Também contem dados nulos.","metadata":{}},{"cell_type":"markdown","source":"**Quais são os tipos de cartão presentes no dataset?**","metadata":{}},{"cell_type":"code","source":"# Listar os tipos de cartões distintos da tabela (SQL)\nquery = 'SELECT DISTINCT tipo_cartao FROM credito'\n\n# Executando a consulta e imprimindo o resultado\nresult = pd.read_sql(query, conn)\nresult.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-06T16:13:20.914296Z","iopub.execute_input":"2024-11-06T16:13:20.914895Z","iopub.status.idle":"2024-11-06T16:13:22.901133Z","shell.execute_reply.started":"2024-11-06T16:13:20.914839Z","shell.execute_reply":"2024-11-06T16:13:22.899925Z"}},"outputs":[{"execution_count":15,"output_type":"execute_result","data":{"text/plain":"  tipo_cartao\n0      silver\n1    platinum\n2        blue\n3        gold","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>tipo_cartao</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>silver</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>platinum</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>blue</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>gold</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":15},{"cell_type":"markdown","source":"> Aqui não há necessidade de tratar valores nulos.","metadata":{}},{"cell_type":"markdown","source":"## 2. Análise","metadata":{}},{"cell_type":"markdown","source":"Uma vez com os dados explorados, podemos avançar para análises mais profundas para entender o que está acontecendo no banco de dados. Após compreender as variáveis e a estrutura dos dados, podemos formular perguntas que nos ajudem a tirar insights valiosos. Por exemplo, podemos analisar a distribuição dos clientes de acordo com sua faixa salarial e responder a perguntas como: **Quantos clientes pertencem a cada faixa salarial nesse banco de dados?** Esse tipo de análise nos permite segmentar os clientes com base em características financeiras e identificar possíveis padrões ou tendências relacionadas à faixa de renda.","metadata":{}},{"cell_type":"code","source":"# Contar os dados agrupando por salário anual (SQL)\nquery = 'SELECT count(*) as total, salario_anual from credito group by salario_anual'\n\n# Executando a consulta e imprimindo o resultado\nresult = pd.read_sql(query, conn)\nresult.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-06T16:14:17.627566Z","iopub.execute_input":"2024-11-06T16:14:17.628040Z","iopub.status.idle":"2024-11-06T16:14:20.048966Z","shell.execute_reply.started":"2024-11-06T16:14:17.627997Z","shell.execute_reply":"2024-11-06T16:14:20.047787Z"}},"outputs":[{"execution_count":18,"output_type":"execute_result","data":{"text/plain":"   total   salario_anual\n0    488    $80K - $120K\n1    701  menos que $40K\n2    235              na\n3    451     $60K - $80K\n4    467     $40K - $60K","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>total</th>\n      <th>salario_anual</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>488</td>\n      <td>$80K - $120K</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>701</td>\n      <td>menos que $40K</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>235</td>\n      <td>na</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>451</td>\n      <td>$60K - $80K</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>467</td>\n      <td>$40K - $60K</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":18},{"cell_type":"markdown","source":"> A maioria dos clientes dessa base de dados possui um renda menor que 40K e existem 235 clientes que não informaram ou não consta a faixa salarial. \n> De certa forma, pode ser interessante para a empresa focar nesse público de mais baixa renda. ","metadata":{}},{"cell_type":"markdown","source":"**Nesse banco de dados, quantos clientes são homens e quantos são mulheres?**","metadata":{}},{"cell_type":"code","source":"# Contar os dados agrupando por sexo (SQL)\nquery = 'SELECT count(*) as total, sexo from credito group by sexo'\n\n# Executando a consulta e imprimindo o resultado\nresult = pd.read_sql(query, conn)\nresult.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-06T16:16:22.060565Z","iopub.execute_input":"2024-11-06T16:16:22.061068Z","iopub.status.idle":"2024-11-06T16:16:24.036784Z","shell.execute_reply.started":"2024-11-06T16:16:22.061012Z","shell.execute_reply":"2024-11-06T16:16:24.035327Z"}},"outputs":[{"execution_count":20,"output_type":"execute_result","data":{"text/plain":"   total sexo\n0   1001    F\n1   1563    M","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>total</th>\n      <th>sexo</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1001</td>\n      <td>F</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1563</td>\n      <td>M</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":20},{"cell_type":"code","source":"# Substituindo os valores 'M' por 'Masculino' e 'F' por 'Feminino' na coluna 'sexo'\ndf = result\ndf['sexo'] = result['sexo'].replace({'M': 'Masculino', 'F': 'Feminino'})\n\n# Criando o gráfico de pizza\nplt.figure(figsize=(4, 4))\nplt.pie(\n        result['total'], \n        labels=result['sexo'], \n        autopct='%1.1f%%', \n        startangle=90, colors=['#ff9999','#66b3ff'], \n        wedgeprops=dict(width=0.5, edgecolor='w'),\n        labeldistance=1.2,\n        pctdistance=0.75\n)\nplt.title('Distribuição de Clientes por Sexo')\nplt.axis('equal')\nplt.show()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-06T16:27:46.798275Z","iopub.execute_input":"2024-11-06T16:27:46.798817Z","iopub.status.idle":"2024-11-06T16:27:46.957956Z","shell.execute_reply.started":"2024-11-06T16:27:46.798749Z","shell.execute_reply":"2024-11-06T16:27:46.956614Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 400x400 with 1 Axes>","image/png":""},"metadata":{}}],"execution_count":36},{"cell_type":"markdown","source":"> A maioria dos clientes desse banco é homem! A partir do dataframe dos dados do AWS foi possível gerar o gráfico de rosca para visualizar melhor a proporção de masculino/feminino.","metadata":{}},{"cell_type":"markdown","source":"**Queremos focar o nosso marketing de maneira adequada para nossos clientes, qual será a idade deles?**","metadata":{}},{"cell_type":"code","source":"# Listar a média, mínima e máxima idade, agrupando os resultados por sexo (SQL)\nquery = 'SELECT avg(idade) as media_idade, min(idade) as min_idade, max(idade) as max_idade, sexo from credito group by sexo'\n\n# Executando a consulta e imprimindo o resultado\nresult = pd.read_sql(query, conn)\nresult.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-06T16:31:08.580169Z","iopub.execute_input":"2024-11-06T16:31:08.580697Z","iopub.status.idle":"2024-11-06T16:31:11.023829Z","shell.execute_reply.started":"2024-11-06T16:31:08.580650Z","shell.execute_reply":"2024-11-06T16:31:11.022494Z"}},"outputs":[{"execution_count":38,"output_type":"execute_result","data":{"text/plain":"   media_idade  min_idade  max_idade sexo\n0    46.429570         26         67    F\n1    45.573896         26         73    M","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>media_idade</th>\n      <th>min_idade</th>\n      <th>max_idade</th>\n      <th>sexo</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>46.429570</td>\n      <td>26</td>\n      <td>67</td>\n      <td>F</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>45.573896</td>\n      <td>26</td>\n      <td>73</td>\n      <td>M</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":38},{"cell_type":"markdown","source":"> Por meio dessa análise, não foi possível extrair informações relevantes. A menor idade de ambos os sexos é a mesma, e a média é muito similar. A única diferença aparente é a idade máxima, mas esse fato é quase irrelevante, pois a diferença não é tão expressiva.","metadata":{}},{"cell_type":"markdown","source":"**Qual a maior e menor transação dos clientes?**","metadata":{}},{"cell_type":"code","source":"# Listar a mínima e a máxima transação de 12 meses (SQL)\nquery = 'SELECT min(valor_transacoes_12m) as transacao_minima, max(valor_transacoes_12m) as transacao_maxima from credito'\n\n# Executando a consulta e imprimindo o resultado\nresult = pd.read_sql(query, conn)\nresult.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-06T16:34:01.388256Z","iopub.execute_input":"2024-11-06T16:34:01.388773Z","iopub.status.idle":"2024-11-06T16:34:03.366611Z","shell.execute_reply.started":"2024-11-06T16:34:01.388712Z","shell.execute_reply":"2024-11-06T16:34:03.365218Z"}},"outputs":[{"execution_count":41,"output_type":"execute_result","data":{"text/plain":"   transacao_minima  transacao_maxima\n0            510.16           4776.58","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>transacao_minima</th>\n      <th>transacao_maxima</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>510.16</td>\n      <td>4776.58</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":41},{"cell_type":"markdown","source":"> Este banco de dados possuí a soma de transações em 12 meses variando de 510.16 a 4776.58","metadata":{}},{"cell_type":"markdown","source":"**Quais as características dos clientes que possuem os maiores créditos?**","metadata":{}},{"cell_type":"code","source":"# Listar o maior limite de crédito, junto com a escolaridade, tipo de cartão e sexo, filtrando dados não disponíveis e agrupando os resultados (SQL)\nquery = \"\"\"SELECT max(limite_credito) as limite_credito, escolaridade, tipo_cartao, sexo \nfrom credito\nwhere escolaridade != 'na' and tipo_cartao != 'na' \ngroup by escolaridade, tipo_cartao, sexo \norder by limite_credito desc\nlimit 10\"\"\"\n\n# Executando a consulta e imprimindo o resultado\nresult = pd.read_sql(query, conn)\nresult.head(20)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-06T16:43:01.676307Z","iopub.execute_input":"2024-11-06T16:43:01.676899Z","iopub.status.idle":"2024-11-06T16:43:03.702188Z","shell.execute_reply.started":"2024-11-06T16:43:01.676846Z","shell.execute_reply":"2024-11-06T16:43:03.700832Z"}},"outputs":[{"execution_count":45,"output_type":"execute_result","data":{"text/plain":"   limite_credito         escolaridade tipo_cartao sexo\n0        34516.99  sem educacao formal        blue    M\n1        34516.98             mestrado        gold    M\n2        34516.97             mestrado        blue    M\n3        34516.96  sem educacao formal      silver    M\n4        34516.96            doutorado    platinum    F\n5        34516.95         ensino medio        gold    M\n6        34516.94            graduacao        gold    F\n7        34516.94            graduacao        gold    M\n8        34516.89            graduacao      silver    M\n9        34516.74         ensino medio        blue    M","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>limite_credito</th>\n      <th>escolaridade</th>\n      <th>tipo_cartao</th>\n      <th>sexo</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>34516.99</td>\n      <td>sem educacao formal</td>\n      <td>blue</td>\n      <td>M</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>34516.98</td>\n      <td>mestrado</td>\n      <td>gold</td>\n      <td>M</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>34516.97</td>\n      <td>mestrado</td>\n      <td>blue</td>\n      <td>M</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>34516.96</td>\n      <td>sem educacao formal</td>\n      <td>silver</td>\n      <td>M</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>34516.96</td>\n      <td>doutorado</td>\n      <td>platinum</td>\n      <td>F</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>34516.95</td>\n      <td>ensino medio</td>\n      <td>gold</td>\n      <td>M</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>34516.94</td>\n      <td>graduacao</td>\n      <td>gold</td>\n      <td>F</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>34516.94</td>\n      <td>graduacao</td>\n      <td>gold</td>\n      <td>M</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>34516.89</td>\n      <td>graduacao</td>\n      <td>silver</td>\n      <td>M</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>34516.74</td>\n      <td>ensino medio</td>\n      <td>blue</td>\n      <td>M</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":45},{"cell_type":"markdown","source":"> Não parece haver um impacto da escolaridade no limite. O limite mais alto é oferecido para um homem sem educação formal. O cartão também parece não estar relacionado com a escolaridade nem com o limite. Dentre os maiores limites, existem clientes com cartão: gold, silver, platinum e blue","metadata":{}},{"cell_type":"markdown","source":"**Quais as características dos clientes que possuem os menores creditos?**","metadata":{}},{"cell_type":"code","source":"# Listar o menor limite de crédito, junto com a escolaridade, tipo de cartão e sexo, filtrando dados não disponíveis, agrupando e ordenando os resultados de forma crescente (SQL)\nquery = \"\"\"SELECT max(limite_credito) as limite_credito, escolaridade, tipo_cartao, sexo \nfrom credito\nwhere escolaridade != 'na' and tipo_cartao != 'na' \ngroup by escolaridade, tipo_cartao, sexo \norder by limite_credito ASC\"\"\"\n\n# Executando a consulta e imprimindo o resultado\nresult = pd.read_sql(query, conn)\nresult.head(10)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-06T16:50:11.322249Z","iopub.execute_input":"2024-11-06T16:50:11.322752Z","iopub.status.idle":"2024-11-06T16:50:13.296529Z","shell.execute_reply.started":"2024-11-06T16:50:11.322709Z","shell.execute_reply":"2024-11-06T16:50:13.295368Z"}},"outputs":[{"execution_count":49,"output_type":"execute_result","data":{"text/plain":"   limite_credito         escolaridade tipo_cartao sexo\n0        13882.37         ensino medio      silver    F\n1        15534.85         ensino medio        gold    F\n2        15987.78             mestrado        gold    F\n3        23032.31            graduacao        blue    F\n4        24936.22             mestrado        blue    F\n5        26053.49            doutorado        blue    F\n6        26181.89  sem educacao formal        blue    F\n7        29543.10         ensino medio        blue    F\n8        30310.45             mestrado      silver    F\n9        34516.16            doutorado        gold    M","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>limite_credito</th>\n      <th>escolaridade</th>\n      <th>tipo_cartao</th>\n      <th>sexo</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>13882.37</td>\n      <td>ensino medio</td>\n      <td>silver</td>\n      <td>F</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>15534.85</td>\n      <td>ensino medio</td>\n      <td>gold</td>\n      <td>F</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>15987.78</td>\n      <td>mestrado</td>\n      <td>gold</td>\n      <td>F</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>23032.31</td>\n      <td>graduacao</td>\n      <td>blue</td>\n      <td>F</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>24936.22</td>\n      <td>mestrado</td>\n      <td>blue</td>\n      <td>F</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>26053.49</td>\n      <td>doutorado</td>\n      <td>blue</td>\n      <td>F</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>26181.89</td>\n      <td>sem educacao formal</td>\n      <td>blue</td>\n      <td>F</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>29543.10</td>\n      <td>ensino medio</td>\n      <td>blue</td>\n      <td>F</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>30310.45</td>\n      <td>mestrado</td>\n      <td>silver</td>\n      <td>F</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>34516.16</td>\n      <td>doutorado</td>\n      <td>gold</td>\n      <td>M</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":49},{"cell_type":"markdown","source":"> É possível notar que não há clientes com cartão platinum dentre os menores limites. Também foi possível perceber que a maioria dos menores limites são mulheres enquanto nos maiores limites predomina os homens.","metadata":{}},{"cell_type":"markdown","source":"**Será que as mulheres gastam mais?**","metadata":{}},{"cell_type":"code","source":"# Listar o maior, médio e menor valor gasto em transações nos últimos 12 meses, agrupando os resultados por sexo (SQL)\nquery = \"\"\"SELECT max(valor_transacoes_12m) as maior_valor_gasto, avg(valor_transacoes_12m) as media_valor_gasto, min(valor_transacoes_12m) as min_valor_gasto, sexo \nfrom credito\ngroup by sexo\"\"\"\n\n# Executando a consulta e imprimindo o resultado\nresult = pd.read_sql(query, conn)\nresult.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-06T16:52:34.206682Z","iopub.execute_input":"2024-11-06T16:52:34.207167Z","iopub.status.idle":"2024-11-06T16:52:36.202691Z","shell.execute_reply.started":"2024-11-06T16:52:34.207124Z","shell.execute_reply":"2024-11-06T16:52:36.201450Z"}},"outputs":[{"execution_count":51,"output_type":"execute_result","data":{"text/plain":"   maior_valor_gasto  media_valor_gasto  min_valor_gasto sexo\n0            4776.58          1839.6226           510.16    F\n1            4686.93          1807.9680           530.36    M","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>maior_valor_gasto</th>\n      <th>media_valor_gasto</th>\n      <th>min_valor_gasto</th>\n      <th>sexo</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>4776.58</td>\n      <td>1839.6226</td>\n      <td>510.16</td>\n      <td>F</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>4686.93</td>\n      <td>1807.9680</td>\n      <td>530.36</td>\n      <td>M</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":51},{"cell_type":"markdown","source":"> Apesar da diferença nos limites, os gastos entre homens e mulheres são similares.","metadata":{}},{"cell_type":"markdown","source":"**O salário impacta no limite?**","metadata":{}},{"cell_type":"code","source":"# Listar a quantidade média de produtos, valor médio de transações em 12 meses e limite de crédito médio, agrupando os resultados por sexo e faixa salarial, ordenando pelo valor médio de transações de forma decrescente (SQL)\nquery = \"\"\"SELECT avg(qtd_produtos) as qts_produtos, avg(valor_transacoes_12m) as media_valor_transacoes, avg(limite_credito) as media_limite, sexo, salario_anual \nfrom credito \nwhere salario_anual != 'na'\ngroup by sexo, salario_anual\norder by avg(valor_transacoes_12m) DESC\"\"\"\n\n# Executando a consulta e imprimindo o resultado\nresult = pd.read_sql(query, conn)\nresult.head(10)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-06T16:54:12.789159Z","iopub.execute_input":"2024-11-06T16:54:12.789637Z","iopub.status.idle":"2024-11-06T16:54:14.808625Z","shell.execute_reply.started":"2024-11-06T16:54:12.789595Z","shell.execute_reply":"2024-11-06T16:54:14.807323Z"}},"outputs":[{"execution_count":53,"output_type":"execute_result","data":{"text/plain":"   qts_produtos  media_valor_transacoes  media_limite sexo   salario_anual\n0      4.394231               1963.6719     3452.4036    M  menos que $40K\n1      4.291971               1878.2974     5753.3100    M     $40K - $60K\n2      4.408710               1845.1332     4212.1987    F  menos que $40K\n3      4.352550               1818.6364     9096.0280    M     $60K - $80K\n4      4.440415               1781.4299     4773.4463    F     $40K - $60K\n5      4.329918               1755.2499    14886.5560    M    $80K - $120K\n6      4.328829               1701.4652    17801.4880    M         $120K +","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>qts_produtos</th>\n      <th>media_valor_transacoes</th>\n      <th>media_limite</th>\n      <th>sexo</th>\n      <th>salario_anual</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>4.394231</td>\n      <td>1963.6719</td>\n      <td>3452.4036</td>\n      <td>M</td>\n      <td>menos que $40K</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>4.291971</td>\n      <td>1878.2974</td>\n      <td>5753.3100</td>\n      <td>M</td>\n      <td>$40K - $60K</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>4.408710</td>\n      <td>1845.1332</td>\n      <td>4212.1987</td>\n      <td>F</td>\n      <td>menos que $40K</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4.352550</td>\n      <td>1818.6364</td>\n      <td>9096.0280</td>\n      <td>M</td>\n      <td>$60K - $80K</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>4.440415</td>\n      <td>1781.4299</td>\n      <td>4773.4463</td>\n      <td>F</td>\n      <td>$40K - $60K</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>4.329918</td>\n      <td>1755.2499</td>\n      <td>14886.5560</td>\n      <td>M</td>\n      <td>$80K - $120K</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>4.328829</td>\n      <td>1701.4652</td>\n      <td>17801.4880</td>\n      <td>M</td>\n      <td>$120K +</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":53},{"cell_type":"markdown","source":">Pessoas com faixas salariais menores tendem a ter limites de crédito mais baixos, destacando a importância da renda na liberação de crédito.","metadata":{}},{"cell_type":"markdown","source":"## 3. Conclusões\n\nEssas foram **algumas** análises realizadas a partir do dataset de crédito.\r\n\r\nAlguns insights relevantes:\r\n\r\n- A maioria dos clientes possui uma renda de até 40K.\r\n- A maior parte dos clientes é do sexo masculino.\r\n- A escolaridade não parece ter influência no limite de crédito ou no tipo de cartão.\r\n- Os clientes com os maiores limites de crédito são, em sua maioria, homens.\r\n- A maioria dos clientes com menores limites de crédito é composta por mulheres.\r\n- Entre os menores limites de crédito, não há cartões do tipo platinum.\r\n- A faixa salarial tem um impacto direto no limite de crédito.\r\n- Não existem clientes do sexo feminino com salário anual acima de 60K.\r\n\r\n**Uma análise mais aprofundada dos dados pode ajudar a entender por que as mulheres apresentam menores limites de crédito. Esse fato também pode refletir questões culturais que merecem ser reconsideradas!**\r\n","metadata":{}}]}